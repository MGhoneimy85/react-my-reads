{"version":3,"sources":["BooksAPI.js","components/Book/Book.js","components/Loading/Loading.js","components/SearchBook/SearchBook.js","components/ListBooks/ListBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Book","state","value","_this","props","val","this","onUpdateBook","setState","_this2","react_default","a","createElement","key","className","imageLinks","style","backgroundImage","smallThumbnail","onChange","event","updateVal","target","disabled","title","authors","Component","Loading","SearchBook","loading","noResults","SearchforBooks","BooksAPI","error","forEach","bookOnShelf","catch","console","log","components_Loading_Loading","Link","to","type","placeholder","map","index","components_Book_Book","onUpdate","ListBooks","filter","BooksApp","allBooks","getAllBooks","UpdateBookShelf","Switch","Route","path","render","components_ListBooks_ListBooks","_ref","history","components_SearchBook_SearchBook","React","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1856304e.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nclass Book extends Component {\n  static propTypes = {\n    book: PropTypes.object.isRequired,\n    onUpdateBook: PropTypes.func.isRequired\n  }\n  state = {\n    value: this.props.book.shelf\n  }\n\n  updateVal(val){\n    \n    this.props.onUpdateBook(this.props.book,val)\n    this.setState({ value : val })\n  }\n\n  render() {\n    return (<li key={this.props.book.id}>\n      <div className=\"book\">\n    <div className=\"book-top\">\n    {this.props.book.imageLinks ?  <div className=\"book-cover\" style={{backgroundImage: \"url(\" + this.props.book.imageLinks.smallThumbnail + \")\"}}></div> : null}\n      <div className=\"book-shelf-changer\">\n        <select value={this.state.value ?  this.state.value : 'none' } onChange={event =>  this.updateVal( event.target.value)}>\n          <option value=\"move\" disabled>Move to...</option>\n          <option value=\"currentlyReading\">Currently Reading</option>\n          <option value=\"wantToRead\">Want to Read</option>\n          <option value=\"read\">Read</option>\n          <option value=\"none\">None</option>\n        </select>\n      </div>\n    </div>\n    <div className=\"book-title\">{this.props.book.title}</div>\n    <div className=\"book-authors\">{this.props.book.authors}</div>\n  </div></li>);\n  }\n}\n\nexport default Book;\n","import React, { Component } from \"react\";\n\nclass Loading extends Component {\n  render() {\n    return <div className=\"loading-div\">\n    Loading...\n  </div>;\n  }\n}\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Book from \"../Book\";\nimport * as BooksAPI from '../../BooksAPI';\nimport Loading from \"../Loading/Loading\";\nclass SearchBook extends Component {\n\n  static propTypes = {\n    books: PropTypes.array.isRequired,\n    onUpdate: PropTypes.func.isRequired\n  }\n\n  state = {\n    query: '',\n    loading: false,\n    books: [],\n    noResults: false\n  }\n\n  SearchforBooks = query => {\n    this.setState({ query })\n    if (!query || (query === '')) {\n      this.setState({\n        books: []\n      })\n    } else {\n      this.setState({ loading: true }, () => {\n        BooksAPI.search(query)\n        .then(books => {\n          if(!books.error){\n            this.props.books.forEach((book) => {\n              books.forEach(bookOnShelf => {\n               if(book.id === bookOnShelf.id) {\n                 bookOnShelf.shelf = book.shelf\n                 book.shelf = bookOnShelf.shelf\n                }\n              })\n            })\n            this.setState({\n              books: books,\n              loading: false,\n              noResults: false\n            })\n          } else{\n            this.setState({\n              books: [],\n              loading: false,\n              noResults: true\n            })\n          }\n          \n        })\n        .catch(error => {\n            console.log(error);\n        })\n        });\n    }\n  }\n\n  render() {\n    return (\n\n      <div className=\"search-books\">\n        {this.state.loading ? <Loading /> : null}\n        \n        <div className=\"search-books-bar\">\n          <Link className=\"close-search\" to='/ListBooks'>Back</Link>\n          <div className=\"search-books-input-wrapper\">\n            {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n            <input type=\"text\"\n              placeholder=\"Search by title or author\"\n              value={this.state.query}\n              onChange={event => this.SearchforBooks(event.target.value)} />\n\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n        {this.state.noResults ? <div> No results found </div> : null}\n          <ol className=\"books-grid\">\n            {this.state.books.map((book, index) => (<Book book={book} key={index} onUpdateBook={this.props.onUpdate} />))}\n          </ol>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SearchBook;\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Book from \"../Book/Book\";\n\nclass ListBooks extends Component {\n  static propTypes = {\n    books: PropTypes.array.isRequired,\n    onUpdate: PropTypes.func.isRequired\n  }\n  render() {\n    return (\n      <div className=\"list-books\">\n              <div className=\"list-books-title\">\n                <h1>my books shelfs</h1>\n              </div>\n              <div className=\"list-books-content\">\n                <div>\n                  <div className=\"bookshelf\">\n                    <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                    <div className=\"bookshelf-books\">\n                      <ol className=\"books-grid\">\n                      {this.props.books.filter((book) => (book.shelf === \"currentlyReading\")).map((book, index) => (<Book book={book} key={index} onUpdateBook={this.props.onUpdate} />))}\n                      </ol>\n                    </div>\n                  </div>\n                  <div className=\"bookshelf\">\n                    <h2 className=\"bookshelf-title\">Want to Read</h2>\n                    <div className=\"bookshelf-books\">\n                      <ol className=\"books-grid\">\n                        {this.props.books.filter((book) => (book.shelf === \"wantToRead\")).map((book, index) => (<Book book={book} key={index} onUpdateBook={this.props.onUpdate} />))}\n                      </ol>\n                    </div>\n                  </div>\n                  <div className=\"bookshelf\">\n                    <h2 className=\"bookshelf-title\">Read</h2>\n                    <div className=\"bookshelf-books\">\n                      <ol className=\"books-grid\">\n                        {this.props.books.filter((book) => (book.shelf === \"read\")).map((book, index) => (<Book book={book} key={index} onUpdateBook={this.props.onUpdate} />))}\n                      </ol>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"open-search\">\n                  <Link to='/SearchBook'>Search book</Link>\n              </div>\n            </div>\n    );\n  }\n}\n\nexport default ListBooks;\n","import React from 'react'\nimport { Route , Switch } from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport SearchBook from './components/SearchBook/SearchBook';\nimport ListBooks from './components/ListBooks/ListBooks';\nimport Loading from './components/Loading/Loading';\n\nclass BooksApp extends React.Component {\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     * \n     * DONE DONE DONE \n     */\n    allBooks: [],\n    loading: false\n\n  }\n\n  componentDidMount() {\n    this.getAllBooks()\n  }\n\n  getAllBooks = () => {\n    this.setState({ loading: true }, () => {\n      BooksAPI.getAll().then((books) => {\n        this.setState({ allBooks: books });\n        this.setState({ loading: false });\n      })\n    });\n  }\n\n  UpdateBookShelf = (book, shelf) => {\n    this.setState({ loading: true }, () => {\n      BooksAPI.update(book, shelf).then(() => {\n        this.getAllBooks();\n      })\n    });\n\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n      {this.state.loading ? <Loading /> : null}\n      <Switch>\n        <Route path=\"/\" render={() => (<ListBooks books={this.state.allBooks} onUpdate={this.UpdateBookShelf} />)}/>\n        <Route path=\"/SearchBook\" render={({history}) => (<SearchBook books={this.state.allBooks} onUpdate={this.UpdateBookShelf} />)} />\n      </Switch>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}